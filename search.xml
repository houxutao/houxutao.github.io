<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>pyqt课设代码</title>
      <link href="/2024/11/15/pyqt%E8%AF%BE%E8%AE%BE/"/>
      <url>/2024/11/15/pyqt%E8%AF%BE%E8%AE%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="代码简介"><a href="#代码简介" class="headerlink" title="代码简介"></a>代码简介</h2><p>使用爬虫，爬取<a href="https://quotes.toscrape.com/">名人名言网站</a>的内容并利用PyQt开发一个界面来显示其内容和一些设置，并使用pyinstaller工具来打包成一个exe文件。</p><h3 id="代码得分点"><a href="#代码得分点" class="headerlink" title="代码得分点"></a>代码得分点</h3><p>合格（60-70）– 实现爬虫功能</p><p>中等（70-80）–将爬虫与界面结合：</p><ol><li>1.完成节目布局；</li><li>2.编写爬虫线程；</li><li>在界面上显示爬取数据和日志；</li><li>实现保存功能</li></ol><p>良好（80-90）–音效与美化：</p><ol><li>添加音效；</li><li>美化界面</li></ol><p>优秀（90-100）–用PyInstaller打包</p><h3 id="代码拓扑结构"><a href="#代码拓扑结构" class="headerlink" title="代码拓扑结构"></a>代码拓扑结构</h3><p><img src="/./pyqt%E8%AF%BE%E8%AE%BE/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84.png" alt="代码结构"></p><h3 id="代码运行结果"><a href="#代码运行结果" class="headerlink" title="代码运行结果"></a>代码运行结果</h3><p><img src="/./pyqt%E8%AF%BE%E8%AE%BE/%E4%BB%A3%E7%A0%81%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C" alt="代码运行结果"></p><h3 id="爬虫的实现方案"><a href="#爬虫的实现方案" class="headerlink" title="爬虫的实现方案"></a>爬虫的实现方案</h3><p>http get 请求后，使用Xpath选择器定位</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quote.xpath(<span class="string">'./span/text()'</span>).extract_first()</span><br></pre></td></tr></tbody></table></figure><ul><li><code>.</code> 表示当前节点（即<code>quote</code>所代表的节点）。</li><li><code>./span</code> 表示当前节点的直接子节点中所有的<code>&lt;span&gt;</code>元素。</li><li><code>/text()</code> 表示从这些<code>&lt;span&gt;</code>元素中提取文本内容。 </li><li><code>.extract_first()</code>：这是Scrapy中的一个方法，用于从SelectorList（由XPath或CSS选择器返回的结果集）中提取第一个匹配项的字符串表示。如果SelectorList为空，则返回<code>None</code>。</li></ul><p>从<code>quote</code>所代表的HTML元素中，找到所有直接子<code>&lt;span&gt;</code>元素的文本内容，并返回第一个找到的文本内容。如果没有找到任何<code>&lt;span&gt;</code>元素，则返回<code>None</code>。</p><h2 id="代码源码（有注释）"><a href="#代码源码（有注释）" class="headerlink" title="代码源码（有注释）"></a>代码源码（有注释）</h2><h3 id="main-py"><a href="#main-py" class="headerlink" title="main.py"></a>main.py</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> window <span class="keyword">import</span> CrawlWindow   <span class="comment">#引入window.py的CrawWindow类</span></span><br><span class="line"><span class="keyword">from</span> qt_material <span class="keyword">import</span> apply_stylesheet</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#QApplication([]) 接收窗口事件，以及初始化的和收尾工作</span></span><br><span class="line">    <span class="comment"># 实例化</span></span><br><span class="line">    app = QApplication([])</span><br><span class="line">    apply_stylesheet(app, theme=<span class="string">'dark_teal.xml'</span>)</span><br><span class="line"></span><br><span class="line">    crawl_window = CrawlWindow()</span><br><span class="line">    crawl_window.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></tbody></table></figure><h3 id="sound-py"><a href="#sound-py" class="headerlink" title="sound.py"></a>sound.py</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtMultimedia <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AudioSource</span>:</span><br><span class="line">    <span class="comment"># 初始化，空字典来存储音频名称和对应的 QSoundEffect 实例</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(AudioSource, self).__init__()</span><br><span class="line">        audio_path = Path(<span class="string">'./res/audio'</span>)</span><br><span class="line">        audio_names = [<span class="string">'button'</span>, <span class="string">'finish'</span>, <span class="string">'saved'</span>]</span><br><span class="line">        <span class="comment"># 空字典</span></span><br><span class="line">        self.audio_dict = {}</span><br><span class="line">        <span class="keyword">for</span> name <span class="keyword">in</span> audio_names:</span><br><span class="line">            <span class="comment">#每次循环新建QSoundEffect对象</span></span><br><span class="line">            sound_effect = QSoundEffect()</span><br><span class="line">            url = QUrl.fromLocalFile(<span class="built_in">str</span>(audio_path / (name + <span class="string">'.wav'</span>)))</span><br><span class="line">            <span class="comment">#对象的对应的url地址</span></span><br><span class="line">            sound_effect.setSource(url)</span><br><span class="line">            <span class="comment">#在赋值给字典</span></span><br><span class="line">            self.audio_dict[name] = sound_effect</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play_audio</span>(<span class="params">self, name, volume=<span class="number">1</span></span>):</span><br><span class="line">        <span class="string">"""通过音频名称进行播放"""</span></span><br><span class="line">        audio = self.audio_dict.get(name)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> audio:</span><br><span class="line">            QMessageBox.critical(self, <span class="string">'错误'</span>, <span class="string">'没有这个音频文件！'</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        audio.setVolume(volume)      <span class="comment">#音量</span></span><br><span class="line">        audio.play()                 <span class="comment">#播放</span></span><br></pre></td></tr></tbody></table></figure><h3 id="crawl-py"><a href="#crawl-py" class="headerlink" title="crawl.py"></a>crawl.py</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> parsel <span class="keyword">import</span> Selector   <span class="comment">#Selector 能使用css选择器（静态网页设计的css有学，格式为XML方言，可嵌入在 HTML）来找数据</span></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#     CrawlThread继承QThread</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CrawlThread</span>(<span class="title class_ inherited__">QThread</span>):</span><br><span class="line">    <span class="comment"># 槽信号，要与pyqt通信的,可以被发射（emit）</span></span><br><span class="line">    log_signal = pyqtSignal(<span class="built_in">str</span>)</span><br><span class="line">    finish_signal = pyqtSignal()</span><br><span class="line">    data_signal = pyqtSignal(<span class="built_in">list</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, window</span>):</span><br><span class="line"></span><br><span class="line">        <span class="built_in">super</span>(CrawlThread, self).__init__()</span><br><span class="line">        self.window = window</span><br><span class="line">        self.flag = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment">#初始化页面计数器</span></span><br><span class="line">        page_count = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 从GUI组件中获取总页数</span></span><br><span class="line">        total_page = self.window.page_spin_box.value()</span><br><span class="line">        <span class="comment">#  True  -&gt; 爬虫线程可以运行</span></span><br><span class="line">        self.flag = <span class="literal">True</span></span><br><span class="line">        <span class="comment"># 开始循环，直到页面计数器达到总页数</span></span><br><span class="line">        <span class="keyword">while</span> page_count &lt; total_page:</span><br><span class="line">            <span class="comment"># 检查爬虫标志，如果为True，则继续执行</span></span><br><span class="line">            <span class="keyword">if</span> self.flag:</span><br><span class="line">                <span class="comment"># 页面计数器加1</span></span><br><span class="line">                page_count += <span class="number">1</span></span><br><span class="line">                <span class="comment"># 调用crawl_page方法，传入当前页码进行爬虫</span></span><br><span class="line">                self.crawl_page(page_count)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">       <span class="comment"># emit()用来发射finish_signal信号，让连接的槽函数被执行。(通知gui线程爬虫任务完成)</span></span><br><span class="line">        self.finish_signal.emit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">crawl_page</span>(<span class="params">self, page_num</span>):</span><br><span class="line">        self.log_signal.emit(<span class="string">f'当前正在爬取第<span class="subst">{page_num}</span>页'</span>)</span><br><span class="line"></span><br><span class="line">        page_url = <span class="string">f'https://quotes.toscrape.com/page/<span class="subst">{page_num}</span>/'</span></span><br><span class="line">        <span class="comment">#http get请求</span></span><br><span class="line">        response = requests.get(page_url)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'No quotes found!'</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            self.log_signal.emit(<span class="string">'当前页面上没有名言了，不再继续爬取。'</span>)</span><br><span class="line">            self.stop()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="comment">#解析html</span></span><br><span class="line">        selector = Selector(response.text)</span><br><span class="line">        <span class="comment">#xpath 定位 名言</span></span><br><span class="line">        quotes = selector.xpath(<span class="string">'//div[@class="quote"]'</span>)</span><br><span class="line">        <span class="comment">#遍历 名言</span></span><br><span class="line">        <span class="keyword">for</span> quote <span class="keyword">in</span> quotes:</span><br><span class="line">            <span class="comment">#提取  内容</span></span><br><span class="line">            content = quote.xpath(<span class="string">'./span/text()'</span>).extract_first()</span><br><span class="line">            <span class="comment">#提取 作者</span></span><br><span class="line">            author = quote.xpath(<span class="string">'./span/small/text()'</span>).extract_first()</span><br><span class="line">            <span class="comment"># 提取 标签，连接成字符串</span></span><br><span class="line">            tags = quote.xpath(<span class="string">'./div[@class="tags"]/a/text()'</span>).extract()</span><br><span class="line">            tags = <span class="string">';'</span>.join(tags)</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>([content, author, tags])</span><br><span class="line">            <span class="comment">#发射槽信号，要与pyqt通信的</span></span><br><span class="line">            self.data_signal.emit([content, author, tags])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">stop</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment">#与run对应</span></span><br><span class="line">        self.flag = <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure><h3 id="window-py"><a href="#window-py" class="headerlink" title="window.py"></a>window.py</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> parsel <span class="keyword">import</span> Selector   <span class="comment">#Selector 能使用css选择器（静态网页设计的css有学，格式为XML方言，可嵌入在 HTML）来找数据</span></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#     CrawlThread继承QThread</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CrawlThread</span>(<span class="title class_ inherited__">QThread</span>):</span><br><span class="line">    <span class="comment"># 槽信号，要与pyqt通信的,可以被发射（emit）</span></span><br><span class="line">    log_signal = pyqtSignal(<span class="built_in">str</span>)</span><br><span class="line">    finish_signal = pyqtSignal()</span><br><span class="line">    data_signal = pyqtSignal(<span class="built_in">list</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, window</span>):</span><br><span class="line"></span><br><span class="line">        <span class="built_in">super</span>(CrawlThread, self).__init__()</span><br><span class="line">        self.window = window</span><br><span class="line">        self.flag = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment">#初始化页面计数器</span></span><br><span class="line">        page_count = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 从GUI组件中获取总页数</span></span><br><span class="line">        total_page = self.window.page_spin_box.value()</span><br><span class="line">        <span class="comment">#  True  -&gt; 爬虫线程可以运行</span></span><br><span class="line">        self.flag = <span class="literal">True</span></span><br><span class="line">        <span class="comment"># 开始循环，直到页面计数器达到总页数</span></span><br><span class="line">        <span class="keyword">while</span> page_count &lt; total_page:</span><br><span class="line">            <span class="comment"># 检查爬虫标志，如果为True，则继续执行</span></span><br><span class="line">            <span class="keyword">if</span> self.flag:</span><br><span class="line">                <span class="comment"># 页面计数器加1</span></span><br><span class="line">                page_count += <span class="number">1</span></span><br><span class="line">                <span class="comment"># 调用crawl_page方法，传入当前页码进行爬虫</span></span><br><span class="line">                self.crawl_page(page_count)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">       <span class="comment"># emit()用来发射finish_signal信号，让连接的槽函数被执行。(通知gui线程爬虫任务完成)</span></span><br><span class="line">        self.finish_signal.emit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">crawl_page</span>(<span class="params">self, page_num</span>):</span><br><span class="line">        self.log_signal.emit(<span class="string">f'当前正在爬取第<span class="subst">{page_num}</span>页'</span>)</span><br><span class="line"></span><br><span class="line">        page_url = <span class="string">f'https://quotes.toscrape.com/page/<span class="subst">{page_num}</span>/'</span></span><br><span class="line">        <span class="comment">#http get请求</span></span><br><span class="line">        response = requests.get(page_url)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'No quotes found!'</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            self.log_signal.emit(<span class="string">'当前页面上没有名言了，不再继续爬取。'</span>)</span><br><span class="line">            self.stop()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="comment">#解析html</span></span><br><span class="line">        selector = Selector(response.text)</span><br><span class="line">        <span class="comment">#xpath 定位 名言</span></span><br><span class="line">        quotes = selector.xpath(<span class="string">'//div[@class="quote"]'</span>)</span><br><span class="line">        <span class="comment">#遍历 名言</span></span><br><span class="line">        <span class="keyword">for</span> quote <span class="keyword">in</span> quotes:</span><br><span class="line">            <span class="comment">#提取  内容</span></span><br><span class="line">            content = quote.xpath(<span class="string">'./span/text()'</span>).extract_first()</span><br><span class="line">            <span class="comment">#提取 作者</span></span><br><span class="line">            author = quote.xpath(<span class="string">'./span/small/text()'</span>).extract_first()</span><br><span class="line">            <span class="comment"># 提取 标签，连接成字符串</span></span><br><span class="line">            tags = quote.xpath(<span class="string">'./div[@class="tags"]/a/text()'</span>).extract()</span><br><span class="line">            tags = <span class="string">';'</span>.join(tags)</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>([content, author, tags])</span><br><span class="line">            <span class="comment">#发射槽信号，要与pyqt通信的</span></span><br><span class="line">            self.data_signal.emit([content, author, tags])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">stop</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment">#与run对应</span></span><br><span class="line">        self.flag = <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 知识分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有关我在路边捡到PCB的逆向探索</title>
      <link href="/2024/07/11/%E6%9C%89%E5%85%B3%E6%88%91%E5%9C%A8%E8%B7%AF%E8%BE%B9%E6%8D%A1%E5%88%B0PCB%E7%9A%84%E9%80%86%E5%90%91%E6%8E%A2%E7%B4%A2/"/>
      <url>/2024/07/11/%E6%9C%89%E5%85%B3%E6%88%91%E5%9C%A8%E8%B7%AF%E8%BE%B9%E6%8D%A1%E5%88%B0PCB%E7%9A%84%E9%80%86%E5%90%91%E6%8E%A2%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="事件起因"><a href="#事件起因" class="headerlink" title="事件起因"></a>事件起因</h1><p>2024年7月10号在学校考完试后去学校外的路边理发阿姨那理发途中在路边就发现了这个东西</p><h2 id="充电宝介绍"><a href="#充电宝介绍" class="headerlink" title="充电宝介绍"></a>充电宝介绍</h2><p><img src="/./%E7%BD%97%E9%A9%AC%E4%BB%95%E5%85%85%E7%94%B5%E5%AE%9D%E7%AF%87/8-%E8%AF%A5%E5%85%85%E7%94%B5%E5%AE%9D%E7%9A%84%E5%9E%8B%E5%8F%B7%E5%8F%82%E6%95%B0.jpg" alt="充电宝的型号参数"><br>最大支持22.5w<br><img src="/./%E7%BD%97%E9%A9%AC%E4%BB%95%E5%85%85%E7%94%B5%E5%AE%9D%E7%AF%87/9-%E8%AF%A5%E5%85%85%E7%94%B5%E5%AE%9D%E7%9A%84%E6%8E%A5%E5%8F%A3%E9%9D%A2%E6%9D%BF.jpg" alt="充电宝的接口数量"><br>有Lightning接口，Micro-USB接口输入及typc接口输入输出通用，两个A口输出<br><img src="/./%E7%BD%97%E9%A9%AC%E4%BB%95%E5%85%85%E7%94%B5%E5%AE%9D%E7%AF%87/1-%E5%A4%96%E5%A3%B3%E8%83%8C%E9%9D%A2.jpg" alt="外壳在路边的样子"><br>正面的外壳已经裂开了，背面的外壳还可以。<br><img src="/./%E7%BD%97%E9%A9%AC%E4%BB%95%E5%85%85%E7%94%B5%E5%AE%9D%E7%AF%87/2-%E5%A4%96%E5%A3%B3%E6%AD%A3%E9%9D%A2.jpg" alt="PCB在路边的样子"><br>PCB从样子看应该是没有问题的，成色还行有点小沙子。<br><img src="/./%E7%BD%97%E9%A9%AC%E4%BB%95%E5%85%85%E7%94%B5%E5%AE%9D%E7%AF%87/3-%E7%94%B5%E8%8A%AF%E5%A4%A7%E8%87%B4.jpg" alt="电芯在路边的样子"><br><img src="/./%E7%BD%97%E9%A9%AC%E4%BB%95%E5%85%85%E7%94%B5%E5%AE%9D%E7%AF%87/4-%E7%94%B5%E8%8A%AF%E6%AD%A3%E9%9D%A2.jpg" alt="电芯型号"><br>从电芯来看，这充电宝应该是路过的人不小心从小电鸡上掉下来的。那天全天无下雨，从上面的小水珠上应该是在7月9日之前所弃。<br>电芯不耐摔于是考虑到安全问题就只拿走外壳和在上面的PCB，因此才有了这期推文。</p><h1 id="PCB逆向探索"><a href="#PCB逆向探索" class="headerlink" title="PCB逆向探索"></a>PCB逆向探索</h1><p>回到宿舍看了看PCB整体的做工还是不错的</p><h2 id="PCB正面"><a href="#PCB正面" class="headerlink" title="PCB正面"></a>PCB正面</h2><p><img src="/./%E7%BD%97%E9%A9%AC%E4%BB%95%E5%85%85%E7%94%B5%E5%AE%9D%E7%AF%87/6-%E7%94%B5%E8%B7%AF%E6%9D%BF%E6%AD%A3%E9%9D%A2.jpg" alt="PCB正面细节"><br>方案是珠海智融科技的<strong>sw6103s</strong>与8位MCU为东软的<strong>HR7P169BFGSD</strong><br><img src="/./%E7%BD%97%E9%A9%AC%E4%BB%95%E5%85%85%E7%94%B5%E5%AE%9D%E7%AF%87/12-%E5%BF%AB%E5%85%85%E7%AE%A1%E7%90%86%E8%8A%AF%E7%89%87.jpg" alt="sw6103s"><br>但智融的SW6103s在官网查不到，通过产品的详情看是支持22.5W的功率且sw6103s封装为QFN6*6-40P<br>判断为sw6106是的sw6103S的改版<br><img src="/./%E7%BD%97%E9%A9%AC%E4%BB%95%E5%85%85%E7%94%B5%E5%AE%9D%E7%AF%87/11-8%E4%BD%8DMCU.png" alt="HR7P169BFGSD"></p><p><img src="/./%E7%BD%97%E9%A9%AC%E4%BB%95%E5%85%85%E7%94%B5%E5%AE%9D%E7%AF%87/10-%E5%8F%AF%E8%83%BD%E7%9A%84%E4%BA%A7%E7%BA%BF.png" alt="相关的封装芯片"></p><p>8205A的双N沟道20v 6A</p><h2 id="PCB背面"><a href="#PCB背面" class="headerlink" title="PCB背面"></a>PCB背面</h2><p><img src="/./%E7%BD%97%E9%A9%AC%E4%BB%95%E5%85%85%E7%94%B5%E5%AE%9D%E7%AF%87/7-%E7%94%B5%E8%B7%AF%E6%9D%BF%E8%83%8C%E9%9D%A2.jpg" alt="PCB背面细节"></p><p>锯齿状焊盘(放电齿)来应对esd，防雷击、静电，同时放电齿两端的地用电容耦合。</p><p>开窗加锡大铺铜来增加sw6103s和MCU的散热能力</p><p>DW01A的SOT-23-6L封装电池管理芯片，用于电池充放电、监测、保护。</p><p>NTC对电芯温度检测数据传到MCU，MCU对sw6103s进行自适应调节，来避免意外的发生。</p><hr><p>结语：这块PCB还是不错的，也激起了我对esd的学习兴趣，这类MCU+功能芯片的结合是十分可以的，我那种单纯的sw3526的快充模块可以改进一下加个8位单片机对电流检测，芯片的温度检测，控制散热风扇的转数，加个PID调节，那我的小制作身价将会大大翻倍。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 知识分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有关暑假的安排</title>
      <link href="/2024/07/09/%E6%9C%89%E5%85%B3%E6%9A%91%E5%81%87%E7%9A%84%E5%AE%89%E6%8E%92/"/>
      <url>/2024/07/09/%E6%9C%89%E5%85%B3%E6%9A%91%E5%81%87%E7%9A%84%E5%AE%89%E6%8E%92/</url>
      
        <content type="html"><![CDATA[<blockquote><p>时间：2024/7/9 大二期间在学校的最后一两天</p></blockquote><h1 id="有关暑假的安排一事"><a href="#有关暑假的安排一事" class="headerlink" title="有关暑假的安排一事"></a>有关暑假的安排一事</h1><p>这个暑假是大二转大三的暑假，也是安排实习前的最后一个大假期，要好好安排好这个暑假<br>大致任务为</p><ul><li>沉淀所学知识，完善所学体系： 电路基础，数电模电，数字电路，pcb设计，单片机，stm32，gd32，python，c/c++，hexo，linux。</li><li>熟练所用工具，且学习新工具： AD,SW，（PADS，protel，）</li><li>预习新知识: (教务系统课程书籍)，了解感兴趣的东西 ： opencv，YOLOv8，Tensorflow，Labelme，神经网络等。。。</li><li>思考毕业设计，帮他人设计一下毕业设计都简单点就好，能过就行</li><li>电脑清灰，东部数据计划再创新高<br>其余待定</li></ul><h2 id="放假前的准备"><a href="#放假前的准备" class="headerlink" title="放假前的准备"></a>放假前的准备</h2><ul><li>带回去的东西：多余的长袖衣物和短袖衣服，电路设备（热风枪），电路原件库存，一些书，电灯。。。</li><li>被子等 洗净放好</li><li>3d打印机放好</li><li>废库存清空</li></ul><h2 id="放假后的安排"><a href="#放假后的安排" class="headerlink" title="放假后的安排"></a>放假后的安排</h2><ul><li>每日一句</li><li>每日一更堡垒之夜商城更新</li><li>学习c，51，32</li><li>学习模电，做功放</li><li>学习pcb软件</li></ul><h2 id="闲聊"><a href="#闲聊" class="headerlink" title="闲聊"></a>闲聊</h2><ul><li><p>暑期大家的安排<br>这一暑假大家貌似都想去做暑期工了，洗袜子，包鸡蛋，上流水线<br>我感觉我不行，一是我懒，其次是我感觉干这些没什么价值，我想干的电子工程师助理，我又感觉我的水平还不够。还要做一些技术的沉淀。</p></li><li><p>插本的想法<br>插本我感觉入公办本科没有机会，只能入民办本科，这能入就看家里的经济条件了，况且我的数学，英语本来就不好，只能是地狱难度；<br>在2024届的毕业典礼上所理解到的，一共3601名学生中只有2百多名有上本科，6人考上研，因此我的想法大都偏向就业，当然插本也可能会去试试的。</p></li><li><p>对以后要就业岗位是什么认知吗？<br>我的特长点是软件、硬件都会一点，也是我的弊端，想混个工程师助理先，同时找一些8、32位mcu软开的岗位。工资4到5k，后面在工作后学习提升。</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 生活琐碎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>堡垒之夜月卡及对低价区的认识</title>
      <link href="/2024/07/04/%E5%A0%A1%E5%9E%92%E4%B9%8B%E5%A4%9C%E6%9C%88%E5%8D%A1%E5%8F%8A%E5%AF%B9%E4%BD%8E%E4%BB%B7%E5%8C%BA%E7%9A%84%E8%AE%A4%E8%AF%86/"/>
      <url>/2024/07/04/%E5%A0%A1%E5%9E%92%E4%B9%8B%E5%A4%9C%E6%9C%88%E5%8D%A1%E5%8F%8A%E5%AF%B9%E4%BD%8E%E4%BB%B7%E5%8C%BA%E7%9A%84%E8%AE%A4%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="堡垒之夜月卡及对阿区（阿根廷区）等游戏及游戏装备低价区的认识"><a href="#堡垒之夜月卡及对阿区（阿根廷区）等游戏及游戏装备低价区的认识" class="headerlink" title="堡垒之夜月卡及对阿区（阿根廷区）等游戏及游戏装备低价区的认识"></a>堡垒之夜月卡及对阿区（阿根廷区）等游戏及游戏装备低价区的认识</h1><h2 id="购买堡垒之夜月卡前的前因后果"><a href="#购买堡垒之夜月卡前的前因后果" class="headerlink" title="购买堡垒之夜月卡前的前因后果"></a>购买堡垒之夜月卡前的前因后果</h2><p>在2024年6月末开始继21年国服停服后的国际服账号有玩，因为在国服停服后国内对堡垒之夜并不感冒一直（在大陆）不温不火且账号不能转转移到国际服，这意味着皮肤和镐子…都没了，要重新开始。<br>以至于我许久无玩堡垒之夜了。现玩起来还是可以的，新加了无板模式，同时总是与许多角色、动漫人物联动，但游戏不太平衡…(就不展开讲了)。<br><img src="/./%E5%A0%A1%E5%9E%92%E4%B9%8B%E5%A4%9C/%E4%B8%BB%E9%A1%B5.jpg" alt="堡垒之夜主页"><br>本来看到6月的月卡皮没有中我的审美不想花这钱的，但到了7月1号出月卡皮感觉还可以吧，就与于7月3号买了，当然买了月卡，会给月卡皮肤套装+1000vb+单季的季卡(如果当季用vb买了季卡，他会退回你950买季卡的vb)<br><img src="/./%E5%A0%A1%E5%9E%92%E4%B9%8B%E5%A4%9C/%E5%88%B0%E8%B4%A6.jpg" alt="到账画面"><br><img src="/./%E5%A0%A1%E5%9E%92%E4%B9%8B%E5%A4%9C/%E4%BA%BA%E7%89%A9.jpg" alt="7月月卡皮肤"></p><h3 id="如何购买的查询"><a href="#如何购买的查询" class="headerlink" title="如何购买的查询"></a>如何购买的查询</h3><p>有人说找某宝代充；有人说这样不安全，去买巴西的货币礼品卡去XBOX官网去兑换；有人说用三星的手机或找一张香港的visa卡(银行信用卡)40元左右去自己购买比较安全。</p><p>我看了看某宝的价格与第二种方法对比一下价格<br><img src="/./%E5%A0%A1%E5%9E%92%E4%B9%8B%E5%A4%9C/%E8%B4%AD%E4%B9%B0.jpg" alt="购买单"><br><img src="/./%E5%A0%A1%E5%9E%92%E4%B9%8B%E5%A4%9C/%E5%B7%B4%E8%A5%BF%E5%B8%81.png" alt="巴西币的汇率"><br>价格差还是十分大，可能我的购买渠道差距是十分大的或者是错误的。。。<br>价格差的这么大，便去万能的QQ群问了网友<br>它们的回答是：</p><ul><li>可能是礼品卡有价格上的优惠价</li><li>购买的是低价区如阿区的月卡，自然比较便宜</li></ul><h3 id="低价区的认识"><a href="#低价区的认识" class="headerlink" title="低价区的认识"></a>低价区的认识</h3><p>所谓低价区是指在游戏市场中游戏或游戏装备较低。低价区为何低价则与游戏的定价策略有关。由于各国的发展水平存在差异，游戏平台如Steam会根据各国的购买力平价（PPP）制定不同的定价策略，即分区定价。这种定价策略在本质上属于经济学概念中的一级价格歧视，旨在赚取最大的消费者剩余。在低价区，玩家可以以较低的价格购买到游戏，这对于玩家来说是非常划算的。然而，这也给游戏开发者带来了一定的挑战，因为他们需要平衡不同市场的价格差异，以确保游戏的销量和收益。总结为该地区人民购买力越强，定价就大概率越高！</p><h3 id="对阿根廷这一低价区的经济浅析"><a href="#对阿根廷这一低价区的经济浅析" class="headerlink" title="对阿根廷这一低价区的经济浅析"></a>对阿根廷这一低价区的经济浅析</h3><p>阿根廷地区的发展水平较低，一些游戏平台自然根据该国的购买力来合理定价，以来稳定在该国市场“地位”。正因如此游戏的定价低，于是乎他国的玩家就建立账号于阿根廷区，成为精神阿根廷人。精明的资本家自然会在一定时间过后抬高定价，如EA的双人成行…可刚一抬价，阿根廷经济又崩溃了，通货膨胀高，货币贬值。据报告统计，12月以来积累通货膨胀率高达276.4%。可以想象一下，阿根廷人民生活的艰难。<br><img src="/./%E5%A0%A1%E5%9E%92%E4%B9%8B%E5%A4%9C/%E9%98%BF%E6%A0%B9%E5%BB%B7%E7%9A%84%E6%B1%87%E7%8E%87.jpg" alt="5年的阿根廷货币汇率变化"><br>近来，阿根廷实行了新的经济方案（米莱的“休克疗法”），大致为放开对经济市场的约束，让市场主导一切；大砍政府部门，甚至砍了教育部，让政府不用承担义务教育的大负担，每个9岁的孩子都能自己选择是读书还是踢球让阿根廷足球保持冠军的荣誉，各种补贴大砍，水利、基建也砍，来减少政府的支出，贸易进口税大加（17.5%左右），出口税大减，对中国大量出口牛肉，让中国人能吃上便宜的牛肉；对外出口矿石资源，真就只卖资源，不以资源为引，来发展基建，引进外资，雇佣该国的劳动力以培养专业人才，而是让产业发展停滞，只靠资源求生。。。</p><p>这一经济政策总结为 <em><strong>对内不花钱，对外卖资源，政府不插手，自由无极限</strong></em> 。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活琐碎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>99号亲启 -搬运</title>
      <link href="/2024/06/24/99%E5%8F%B7%E4%BA%B2%E5%90%AF/"/>
      <url>/2024/06/24/99%E5%8F%B7%E4%BA%B2%E5%90%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="一篇来自B站的”足浴文学”"><a href="#一篇来自B站的”足浴文学”" class="headerlink" title="一篇来自B站的”足浴文学”"></a>一篇来自B站的”足浴文学”</h1><blockquote><p>B站号：BV1aE421N7GU</p><p>时间：2024/6/24</p></blockquote><p>亲爱的99号：<br>    见字如面，顺问佳安。时光匆匆，岁月无声，不知不觉间，你我已相识99天。<br>还记得初见你时，慌乱中带着欢喜、失措中带着雀跃。那种感觉就像淡若云烟的花朵遇到了春风。刹那间，春光便照进了心里，我想，在这个世界上，我喜欢你，大概是最独断，最没有道理的事。毕竟，在遇到你之前，我的世界一片狼藉，枯燥乏味，虚度光阴。可是遇见你之后，生活便有了玫瑰，诗意和梦想,让我觉得人间仍值得。有人说，没有那么多的一见钟情，不过是见色起义罢了。其实我也曾问过自己，到底是你的什么魅力让我着迷？大概是那一天你灵动的短发造型，或者是你温柔的讲话方式在，或者是你优秀的洗脚功夫，我也说不清，只知道你给我的感觉是独一份的，你和别人不一样，你就好似那春风化雨，润物无声。而我对你的感觉就像鱼恋着大海、鸟爱着天空，都是出于天性，无需原因，无法抹灭。只因为是你，这一切才有了意义。<br>    不过遇见你只是故事的开始，走到底才算是余生的欢喜。我想你比我幸运.<br>因为你可以选择爱我，或者不爱我，而我却只能选择爱你，或者更爱你。林徽因曾经写过，你是一束一束的花开，是燕在梁间的呢喃，你是爱、是暖、是希望，你是人间的四月天。我不敢说自己这一生都只钟情你，不过至少再能看见你的岁月和时光里。我只想对你一个人好也不会偷偷跑去别人那里洗脚。喜欢是一瞬间的沦陷，而爱却是一辈子的执着。纵使生活没那么容易。我还是想把你在未来里，一生欢喜，不为世俗所及，相识虽是上上签，任想与卿到暮年，云纸太短，不能赋千言，丹墨易干，填不完字里行间。<br>    惟愿99号，如常为喜，如愿为安，爱你的麦克阿水。</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 生活琐碎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024年5月总结</title>
      <link href="/2024/06/16/5%E6%9C%88%E6%80%BB%E7%BB%93/"/>
      <url>/2024/06/16/5%E6%9C%88%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="2024年5月总结"><a href="#2024年5月总结" class="headerlink" title="2024年5月总结"></a>2024年5月总结</h1><blockquote><p>生活琐碎</p><p>作者：侯旭涛</p><p>写作时间：2024年6月3日，星期一在勤工俭学上班时所写，完结于6月中旬。。。</p></blockquote><h2 id="总结记录内容"><a href="#总结记录内容" class="headerlink" title="总结记录内容"></a>总结记录内容</h2><p>对5月完成什么事情，项目的完成情况，心灵记录，生活所思。</p><h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><p>在5月共有三个项目设计或复刻</p><ul><li>5月6号的智能定时蚊香加热器复刻<br>选型：主控stc8g1k08，该项目pcb十分漂亮的圆形<br>原理图：<br><img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/%E8%9A%8A%E9%A6%99%E5%8A%A0%E7%83%AD%E5%99%A8.jpg" alt="蚊香加热器"><br>PCB:<br><img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/%E5%8A%A0%E7%83%AD%E5%99%A8PCB.jpg" alt="蚊香加热器PCB"><br>原理为的电阻通电加热，NTC采集端，主控pid调节，控制A3401-PMOS的导通，从而控制电阻的通电加热。</li><li>5月13号，硬盘笼设计，本想再设计SATA转USB与USB3.0hub来拓展我的电脑usb接口来多接几个硬盘，可成本太高，技术要求太高了，就买了一个SATA转usb的接口20多，也还行，结构为左边是风扇，中间的12v100w的明纬电源下层是500g机械硬盘，上层是12v风扇的调速由之前在学校第二课堂学分小活动拿下的一等奖的LM317调压电源模块来处理。画完sw、3d打印、装配后可以使用,但是使用十分不方便，后来再买了一个500g机械西数，在3d打印交流群上发现了一个更好的设计但我的开关电源要外放（当然这是6月的后话了。）<br><img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/%E4%BA%8C%E7%9B%98%E4%BD%8D%E6%A8%A1%E5%9E%8B.png" alt="3d模型"><br>如果是接sata_7p的数据线+sata_15p的供电线的话是可以的正常使用的，但是使用usb转sata的转接线的话可能产生干涉，要重新设计或用工具剪开干涉部分。<br><img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/%E5%AE%9E%E7%89%A9%E5%9B%BE.jpg" alt="实物图"><br><img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/%E5%AE%9E%E7%89%A9%E5%9B%BE2.jpg" alt="实物图2"><br><img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/%E5%AE%9E%E7%89%A9%E5%A4%A7%E8%87%B4%E5%9B%BE.jpg" alt="实物大致"><br><img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/%E5%AE%9E%E7%89%A9%E6%AD%A3%E9%9D%A2%E5%9B%BE.jpg" alt="实物正面"><br><img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/%E5%AE%9E%E7%89%A9%E4%BE%A7%E9%9D%A2%E5%9B%BE.jpg" alt="实物侧面"></li></ul><p>-5月19号设计USB3.0hub画完了提交到嘉立创上打印，主控为VL813(VL812 pin to pin),学习内容为使用嘉 立创阻抗计算神器，选用方案为JLC04161H-7628的阻抗模式。<br>  下面是我的USB3.0hub的设计原理图和PCB图纸<br>  <img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/USB3.0hub%E5%8E%9F%E7%90%86%E5%9B%BE.png" alt="原理图"><br>  <img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/USB3.0hub%E9%A1%B6%E5%B1%82.png" alt="PCB顶层"><br>  <img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/USB3.0hub%E5%86%85%E7%94%B5%E5%B1%821.png" alt="PCB内电层1"><br>  <img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/USB3.0hub%E5%86%85%E7%94%B5%E5%B1%822.png" alt="PCB内电层2"><br>  <img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/USB3.0hub%E5%BA%95%E5%B1%82.png" alt="PCB的底层"><br>  <img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/USB3.0HUB%E5%AE%9E%E7%89%A9%E5%9B%BE.jpg" alt="实物图"><br>很遗憾到最后板子是废了,刚开始usb3.0无法识别只能识别usb2.0，无知什么原因芯片就无法正常工作了，可能的原因是芯片短路=&gt;芯片中间的散热孔加上散热孔周围的过孔顶起了一个下空间导致芯片缺焊，同时小空间里多的焊锡把引脚短路了。在此我它事缠身便没有深探！</p><h4 id="基于玩客云ws1608对垃圾的学习研究"><a href="#基于玩客云ws1608对垃圾的学习研究" class="headerlink" title="基于玩客云ws1608对垃圾的学习研究"></a>基于玩客云ws1608对垃圾的学习研究</h4><p>Date：5月24号</p><h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>我在咸鱼上买了一个玩客云来玩玩，型号为ws1608，1G+8G、SD卡槽、HDMI输出接口、两个USB2.0接口、以及千兆网口的配置，包邮在28-30左右。<br>这个东西在2018的时候可以卖498元，在那时主要买来赚网费，它可以利用家里闲置的宽带上行给迅雷加速使用的一款边缘计算产品。但是在2024年2月该公司服务器停止运营了，这东西也就没用了，我称为矿难产品“老母鸡”。<br><img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/%E8%80%81%E6%AF%8D%E9%B8%A1%E4%B8%BB%E6%9D%BF.jpg" alt="老母鸡主板"></p><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>我买来学习一下刷机，了解一下nas，好在以后回到家把家里的海思的机顶盒刷上其他系统，同时玩上一玩也是刷新一下我对这个互联网信息获取的渠道如：<a href="https://doc.ecoo.top/">海纳思系统</a>、<a href="https://post.smzdm.com/p/am3nvq7v/">什么值得买社区</a>…等等<br>刷安卓电视盒子看1080p电视，但有广告(别问我为什么不看2k或者4k视频因为机器的芯片S805解码能力太弱了带不动！！！)<br><img src="/./5%E6%9C%88%E6%9C%88%E8%AE%B0/%E5%88%B7%E5%AE%89%E5%8D%93%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90.jpg" alt="刷安卓电视盒子"></p><p>刷armbian底包+casaos系统做文件共享+种子下载</p><p>刷海纳思系统，这个系统基于ubuntu20.04的版本，还算好用吧…</p><hr><p>结语：<br>5月真的好短，刚开始的劳动假期狂看动漫，到月中的游戏时间，月底的摆烂生活，实在是太巴适了<br>本想写我的课堂学习的我发现实在是太无聊了，每周不断的循环，内容单一无味等以后的月记可能写吧！！！<br>我是一个常自我否定的人，对自己乃至我的人生都充满阴云的人，有甚可能演化了虚伪的自己来保护自己。。。。<br>我希望在看这篇文章的你对自己的人生能够充满自信，在自信里找到自强，自强中彰显自立，自立成就自我，才会在自我中不断演绎人生的精彩！！！</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 生活琐碎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TVS管与肖特基二极管学习</title>
      <link href="/2024/06/16/TVS%E7%AE%A1%E4%B8%8E%E8%82%96%E7%89%B9%E5%9F%BA%E4%BA%8C%E6%9E%81%E7%AE%A1%E7%9A%84%E9%80%89%E5%9E%8B/"/>
      <url>/2024/06/16/TVS%E7%AE%A1%E4%B8%8E%E8%82%96%E7%89%B9%E5%9F%BA%E4%BA%8C%E6%9E%81%E7%AE%A1%E7%9A%84%E9%80%89%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="TVS管与肖特基二极管的选型"><a href="#TVS管与肖特基二极管的选型" class="headerlink" title="TVS管与肖特基二极管的选型"></a>TVS管与肖特基二极管的选型</h1><blockquote><p>作者：佛职-侯旭涛<br>创作时间：2024/5/16</p></blockquote><h2 id="什么是TVS管？"><a href="#什么是TVS管？" class="headerlink" title="什么是TVS管？"></a>什么是TVS管？</h2><p>TVS管是一种二极管形式的高效能保护器件。当TVS二极管的两极受到反向瞬态高能量冲击时，它能以极快的速度（通常在10^-12秒量级）将其两极间的<strong>高阻抗变为 <em>低阻抗</em></strong>，吸收高达数千瓦的浪涌功率，并将两极间的电压箝位于一个预定值，从而有效地保护电子线路中的精密元器件免受各种浪涌脉冲的损坏。TVS管具有PS秒级响应速度、瞬态浪涌吸收能力大、低漏电流、箝位电压易控制、体积小、易安装、高可靠性、不易损坏等特点。其击穿电压偏差小，电压精度高，瞬态冲击功率可达200W~30KW甚至更高，工作电压范围广泛。</p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>TVS管主要用于保护电子设备免受过电压损害。它常用于电快速瞬变脉冲群的防护，广泛应用于计算机系统、通讯设备、消费类电子、电源、家用电器等各个领域。<br><img src="/tvs%E7%AE%A1.jpg" alt="tvs"></p><h3 id="TVS管的参数"><a href="#TVS管的参数" class="headerlink" title="TVS管的参数"></a>TVS管的参数</h3><p>以SMBJ6.8A为例<br><img src="/smbj6.8a.jpg" alt="smbj6.8a"></p><h3 id="伏安特性"><a href="#伏安特性" class="headerlink" title="伏安特性"></a>伏安特性</h3><p><img src="/tvs%E7%9A%84%E4%BC%8F%E5%AE%89%E7%89%B9%E6%80%A7.png" alt="tvs的伏安特性"></p><p>1.V<sub>RWN</sub>与其相对应的I<sub>R</sub></p><p>2.V<sub>BR</sub>与其相对应的I<sub>T</sub></p><p>3.V<sub>c</sub>与其相对应的I<sub>PP</sub></p><ul><li><p><strong>V<sub>RWN</sub>截止电压：</strong><br>TVS 的最高工作电压，可连续施加而不引起 TVS 劣化或损坏的最高工作峰值电压或直流峰值电压。对于交流电压，用最高工作电压有效值表示，在 Vrwm 下，TVS 认为是不工作的，即是不导通的。换一句话，电路的最高工作电压必须小于Vrwm，否则将会导致TVS动作导致电路异常。</p></li><li><p><strong>I<sub>R</sub>漏电流：</strong><br>也称待机电流。在规定温度和最高工作电压条件下，流过 TVS 的最大电流。TVS 的漏电流一般是在截止电压下测量，对于某一型号 TVS, IR 应在规定值范围内。对 TVS 两端施加电压值为 Vrwm ，从电流表中读出的电流值即为 TVS的漏电流 IR 。对于同功率和同电压的 TVS，在 Vrwm ≤10V 时，双向 TVS 漏电流是单向 TVS 漏电流的 2 倍。对于一些模拟端口，漏电流会影响AD的采样值，所以TVS的漏电流越小越好。</p></li><li><p><strong>V<sub>BR</sub>击穿电压:</strong><br>击穿电压，指在 V-I 特性曲线上，在规定的脉冲直流电流 IT 或接近发生雪崩的电流条件下测得 TVS 两端的电压。测试的电流 IT一般选取10mA左右，施加的电流的时间不应超过400ms，以免损坏器件，VBR MIN 和 VBR MAX 是 TVS 击穿电压的一个偏差，一般 TVS 为±5%的偏差。测量时，VBR 落在 VBR MIN 和 VBR MAX之间视为合格品。</p></li><li><p><strong>I<sub>PP</sub>峰值脉冲电流 ，V<sub>C</sub>钳位电压:</strong><br>峰值脉冲电流，给定脉冲电流波形的峰值。TVS 一般选用 10/1000μs 电流波形。钳位电压，施加规定波形的峰值脉冲电流 IPP 时，TVS 两端测得的峰值电压。IPP 及 VC 是衡量 TVS 在电路保护中抵抗浪涌脉冲电流及限制电压能力的参数，这两个参数是相互联系的。对于 TVS 在防雷保护电路中的钳位特性，可以参考 VC 这个参数。对于相同型号 TVS，在相同 IPP下的V C 越小，说明 TVS 的钳位特性越好。TVS 的耐脉冲电流冲击能力可以参考 IPP ，同型号的 TVS，IPP越大，耐脉冲电流冲击能力越强。</p></li><li><p><strong>后面还有一些参数由于暂时不接触高速电路不做研究。</strong></p></li></ul><h2 id="什么是肖特基二极管？"><a href="#什么是肖特基二极管？" class="headerlink" title="什么是肖特基二极管？"></a>什么是肖特基二极管？</h2><p>肖特基二极管，也被称为热载流子二极管，是一种<strong>具有低正向压降和非常快速的开关动作</strong>的半导体二极管。当电流流过肖特基二极管时，肖特基二级管端子上有一个小的电压降。普通二极管的电压压降在0.6V-1.7V之间，而肖特基二极管的电压降通常在<code>0.15V-0.45V</code>之间。</p><p>这种较低的电压降<em>提供了更好的系统效率和更高的开关速度</em>。在肖特基二极管中，半导体和金属之间形成了一个半导体-金属结，从而形成了肖特基势垒。N型半导体作为阴极，金属侧作为二极管的阳极。<strong>这种肖特基势垒导致低正向电压降和非常快速的开关。</strong><br><img src="/v2-71f641737e75476c696e03576dfbfafb_r.jpg" alt="肖特基二极管的原理图标"><br><img src="/%E8%82%96%E7%89%B9%E5%9F%BA%E4%BA%8C%E6%9E%81%E7%AE%A1.jpg"><br>这是它的等效电路<br><img src="/v2-7947ebdef514108d13596b1dd9aae8d7_720w.webp" alt="等效电路"></p><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p>当金属与N型半导体结合时，形成<strong>MS结</strong>(暂不做了解，但知此结也叫整流结，也可以在金属与半导体之间提供低阻互连)。这个结被称为肖特基势垒。肖特基势垒的行为会有所不同，具体取决于二极管是处于无偏置、正向偏置还是反向偏置状态。(在此对三种情况不做研究)。只用知道因为这个MS结的存在才有这低功耗、大电流、超高速半导体器件。其<strong>反向恢复时间极短（可以小到几纳秒），正向导通压降仅0.4V左右，</strong>而整流电流却可达到几千毫安(几安)。这些优良特性是快恢复二极管所无法比拟的。</p><h3 id="肖特基二极管的伏安特性"><a href="#肖特基二极管的伏安特性" class="headerlink" title="肖特基二极管的伏安特性"></a>肖特基二极管的伏安特性</h3><p><img src="/v2-0294d00f5d0e1cbb92ce7c5c630f6edc_720w.webp" alt="对比图"><br>肖特基势垒二极管的正向压降比普通的PN结二极管低。由硅制成的肖特基势垒二极管的正向压降呈现出 0.3 伏至 0.5 伏得正向压降。</p><p>正向压降随着n型半导体掺杂浓度的增加而增加。由于载流子的高度集中，肖特基势垒二极管的 VI 特性比普通 PN 结二极管的 VI 特性更陡峭。<img src="/v2-bbf85717f78cd00ebb0199f248987522_720w.webp" alt="alt text"></p><h3 id="肖特基二极管作用与应用"><a href="#肖特基二极管作用与应用" class="headerlink" title="肖特基二极管作用与应用"></a>肖特基二极管作用与应用</h3><p>肖特基二极管具多有用的应用，从<strong>整流、信号调节、开关、电压钳位、太阳能电池到 TTL 和 CMOS 逻辑门</strong>，主要是因为它们的低功耗和快速开关速度。TTL 肖特基逻辑门由出现在其逻辑门电路代码中某处的字母 LS 标识，例如 74LS00。</p><p>射频混频器和检波二极管<br>肖特基二极管因其高开关速度和高频率能力而在射频应用中独树一帜。鉴于此，肖特基势垒二极管用于许多高性能二极管环形混频器。除此之外，它们的低开启电压和高频能力以及低电容使它们成为射频检测器的理想选择。</p><p><strong>功率整流器</strong><br>肖特基势垒二极管也用于大功率应用中，作为整流器。它们的高电流密度和低正向压降意味着与使用普通 PN 结二极管相比，浪费的功率更少。这种效率的提高意味着需要消散的热量更少，并且可以在设计中加入更小的散热器。</p><p><strong>电源或电路</strong><br>肖特基二极管可用于负载由两个独立电源驱动的应用。一个示例可以是主电源和电池电源。在这些情况下，一个电源的电源不能进入另一个电源是必要的。这可以使用二极管来实现。然而，重要的是要最小化二极管上的任何电压降以确保最大效率。</p><p>与许多其他应用一样，鉴于其低正向压降，该二极管非常适合此应用。肖特基二极管往往具有较高的反向漏电流。这可能导致任何可能正在使用的传感电路出现问题。进入高阻抗电路的泄漏路径会导致错误读数。因此，这必须在电路设计中加以考虑。</p><p><strong>电压钳位/削波电路</strong><br>限幅器电路和钳位器电路通常用于波形整形应用。具有低压降特性的肖特基二极管可用作钳位二极管。</p><p>反向电流和放电保护<br>众所周知，肖特基二极管也被称为阻塞二极管，因为它阻止电流反向流动；可用作放电保护。例如，在应急闪光灯中，在超级电容器和直流电机之间使用了一个肖特基二极管，以防止超级电容器通过直流电机放电。</p><p>采样保持电路<br>正向偏置肖特基二极管没有任何少数电荷载流子，因此，它们可以比典型的 PN 结二极管更快地切换。因此使用肖特基二极管是因为它们从采样到保持步骤的转换时间较短，这会在输出端产生更准确的采样。</p><p>太阳能电池<br>肖特基二极管可以帮助最大限度地提高太阳能电池的效率，因为它们具有低正向电压降。它们还有助于保护电池免受反向充电。<br><a href="https://zhuanlan.zhihu.com/p/501004353">参考链接</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 知识分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站介绍</title>
      <link href="/2024/06/16/%E7%BD%91%E7%AB%99%E4%BB%8B%E7%BB%8D/"/>
      <url>/2024/06/16/%E7%BD%91%E7%AB%99%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="我的博客网站历程"><a href="#我的博客网站历程" class="headerlink" title="我的博客网站历程"></a>我的博客网站历程</h2><blockquote><p>作者：佛职-侯旭涛<br>创作时间：2024/5/14</p></blockquote><p>我曾经建立过许多自己的网站，都只采用了HTML+CSS的模式。在这种模式下，只能通过修改HTML文件来实现网站更新。然而，自从我得知我的一位同学使用VuePress来构建网站时，我发现他使用GitHub上所见的Markdown格式文件。只需更新Markdown文件即可实现网站的更新。因此，在2024年5月10日开始，我开始自学Markdown语法。这门语言非常简洁明了，可以说是做到了“心无尘埃、码字有神”。</p><p>在2024年5月14日，我开始研究vuepress这一优秀的工具，并查阅了大量教程，希望能够今天在vscode上成功运行。然而，在整个过程中遇到了许多曲折和困难，尤其是环境搭建方面反复踩坑，包括node.js、npm以及cnnpm等。最令人恼火的是由于VScode终端没有以最高管理员权限启动导致了诸多问题的发生。至此为止，本文就告一段落。接下来我需要思考如何更好地维护我的博客或者说学习记录器。</p><p>在2024年6月5日左右，将目光投向了更好看更酷炫的Hexo，这是一个好用的工具，因为我搭建vuepress的经验，所以我就很快的搭建好了环境及git来一键上传我的文件变动内容到我的github博客地址中。</p><h2 id="我的博客网站内容总结"><a href="#我的博客网站内容总结" class="headerlink" title="我的博客网站内容总结"></a>我的博客网站内容总结</h2><p>总结为一句话就是 “<strong>学习历程与人生分享与生活记录</strong>”，</p><ul><li><p>我的大学学习路线的python，c，linux，ros，前端，8051单片机，机械设计基础，pcb设计，PLC，ABB机器人，Robotstdio，opencv…（当然还是不断的补充中）<br>（题外话：我的专业是大专特有的“智能机器人技术专业”，有一个专业是“工业机器人技术专业”，在我看来它们是本科专业“机器人工程”的下属分支。它开设的课程有：电工学、机器人机械系统、机器视觉、机器人控制技术、单片机原理及应用、ARM嵌入式开发、电气工程CAD、传感技术、C语言程序设计、电力电子技术、现场总线技术、电机学、电气控制与PLC、智能机器人、Python人工智能开发、机器人编程、工业机器人、服务机器人、人工智能控制等。基本是我的专业所学的深入探究。）</p></li><li><p>介绍自己在复刻或者原创项目，从由想法到实现的诸多过程与问题及解决方法与思路</p></li><li><p>通过简单的技术知识分享，帮助大家和自己快速学习或巩固项目开发中的重点知识，便于把控学习进度、并且持续加深印象。</p></li><li><p>介绍生活过程的特事特闻、所记录的名言名句等···</p></li></ul><hr><p>加油少年</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>白嫖的漫画软件</title>
      <link href="/2024/06/16/%E7%99%BD%E5%AB%96%E7%9A%84%E6%BC%AB%E7%94%BB%E8%BD%AF%E4%BB%B6/"/>
      <url>/2024/06/16/%E7%99%BD%E5%AB%96%E7%9A%84%E6%BC%AB%E7%94%BB%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="看漫画的白嫖之路"><a href="#看漫画的白嫖之路" class="headerlink" title="看漫画的白嫖之路"></a>看漫画的白嫖之路</h1><p>今天是2024年的高考日，祝高考生一切顺利！</p><blockquote><p>生活琐碎</p><p>作者：侯旭涛</p><p>写作时间：2024年6月7日晚，微风徐徐</p></blockquote><p>今天下午有空在看《逆天邪神》动漫时，总感觉与某部漫画十分相像，于是在看完《逆天邪神》的动漫是就去看了一下，原来是同名小说改编，也有同名漫画亦更新到678话左右了，于是想找一款可以白嫖看漫画的安卓漫画阅读器APP来在日常生活中解味。原理实现大概为python爬虫或者js脚本，于是便有此文。正文开始！</p><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ol><li>可以手机上无痛使用</li><li>一搜得有结果就自动获取漫画</li><li>可收藏加入书架</li><li>可以缓存</li><li>资源丰富</li></ol><p>一共选了三款app分别为 <strong>“异次元”</strong>,<strong>“是你的益达”<strong>，当然还有很多如：<a href="https://github.com/Haleydu/Cimoc">Cimoc</a>,<a href="https://github.com/IllusionElements/Tachiyomi">Tachiyomi</a>在此我想有 <strong>“异次元”</strong>,</strong>“是你的益达”</strong> 也是够用了。</p><h3 id="异次元"><a href="#异次元" class="headerlink" title="异次元"></a>异次元</h3><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>异次元是王水旺 dalao 开发的一款搜图神器 + 图片阅读器软件。拥有着丰富的自定义功能，用户可以自己 diy 漫画源。这个看着有点像 ios 上的 Yealico。</p><p>说白了，就跟之前介绍的 Cimoc，Tachiyomi 功能类似，软件本身不带漫画内容，资源全靠用户分享。但基本上作者都会在别的地方分享图源给用户使用。</p><h4 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h4><p>可自由制作添加图源和发现。<br>拥有多种翻页方式和阅读模式。<br>支持音量键翻页。<br>可对漫画进行下载缓存，方便无网络时观看。<br>支持图源和书架备份。</p><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>下载地址：<a href="https://yiciyuan.lanzoui.com/b00ej0kba">https://yiciyuan.lanzoui.com/b00ej0kba</a><br><img src="/image.png" alt="alt text"><br>源地址： <a href="https://www.yckceo.com/yiciyuan/index/index.html">https://www.yckceo.com/yiciyuan/index/index.html</a><br>图源可载上面网站找自己认为合适的。<br><img src="/image-1.png" alt="alt text">{:height=”250px”width=”250px”}<br><strong>网络和扫码导入图源</strong><br>在异次元漫画 APP 里点侧边栏菜单「图源」→「网络导入」，复制下面的图源网址即可进行导入。或者你也可以选择「图源」→「扫码导入」，然后扫下面对应的二维码即可导入。</p><p><img src="/%E5%BC%82%E6%AC%A1%E5%85%83%E5%9B%BE%E6%A0%87.jpg" alt="图标">{:height=”250px”width=”250px”}<br><img src="/%E5%BC%82%E6%AC%A1%E5%85%83%E5%9B%BE1.jpg" alt="图1">{:height=”250px”width=”250px”}<br><img src="/%E5%BC%82%E6%AC%A1%E5%85%83%E5%9B%BE2.jpg" alt="图2">{:height=”250px”width=”250px”}<br><img src="/%E5%BC%82%E6%AC%A1%E5%85%83%E5%9B%BE3.jpg" alt="图3">{:height=”250px”width=”250px”} </p><h3 id="是你的益达"><a href="#是你的益达" class="headerlink" title="是你的益达"></a>是你的益达</h3><h4 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h4><p>Yida App 是一款由Flutter和Rust两种编程语言共同开发出来的开源跨平台应用。这款应用的主要功能是让用户能够方便地<strong>查看图片、视频、RSS以及小说</strong>等不同类型的内容。安装完成后导入源就可以直接使用。一个顶三儿！也就是说可以在 <strong>Windows,iOS,android</strong>上运行！</p><h4 id="基本使用-1"><a href="#基本使用-1" class="headerlink" title="基本使用"></a>基本使用</h4><ul><li>下载地址：<a href="https://github.com/xiaohucode/yidaRule">https://github.com/xiaohucode/yidaRule</a><br><img src="/yida.jpg" alt="yida"><br>下载完与上文的《异次元》一样是空壳，用导入规则或者说是源</li><li>导入：我用的方法是不是用一键导入规则，而是用yds文件导入法，方法不同原理相同。<br>官方yds文件地址：<a href="https://github.com/xiaohucode/yidaRule/raw/main/siteRule/ydSource.yds">https://github.com/xiaohucode/yidaRule/raw/main/siteRule/ydSource.yds</a><br>用浏览器打开下载其中的yds文件，文件管理中用”是你的益达”打开yds文件就可以了，当然你可以用任何方法只要能有”是你的益达”打开就可以了！<br>完成后想要什么资源自己搜即可！<br><img src="/yida2.jpg" alt="yida">{:height=”250px”width=”250px”}<br>以上是它的基本用法<br><strong>官方的yds可能年代久远会失效</strong><br><strong>官方的yds可能年代久远会失效</strong><br><strong>官方的yds可能年代久远会失效</strong><br>如果”是你的益达”是非用不可的话，可以自学一下“<strong>自制源</strong>”</li></ul><h2 id="针对以上俩个app的比较"><a href="#针对以上俩个app的比较" class="headerlink" title="针对以上俩个app的比较"></a>针对以上俩个app的比较</h2><ol><li>异次元的图源资源更丰富，有第三方的图源支持意味着有第三者可以一直做出维护，益达的官方配置可能维护少，要的资源可能难找到</li><li>异次元只有漫画，益达有多种如图片、视频、RSS以及小说。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 生活琐碎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/06/08/hello-world/"/>
      <url>/2024/06/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
